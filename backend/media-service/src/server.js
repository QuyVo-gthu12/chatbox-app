// server.js
require('dotenv').config(); // Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env
const app = require('./app');

// ‚úÖ Danh s√°ch bi·∫øn m√¥i tr∆∞·ªùng b·∫Øt bu·ªôc
const requiredEnvVars = ['PORT', 'MEDIA_URL', 'JWT_SECRET'];

// ‚úÖ Ki·ªÉm tra c√°c bi·∫øn m√¥i tr∆∞·ªùng
const missingEnvVars = requiredEnvVars.filter(envVar => !process.env[envVar]);
if (missingEnvVars.length > 0) {
  console.error('‚ùå Missing required environment variables:', missingEnvVars.join(', '));
  process.exit(1); // D·ª´ng server n·∫øu thi·∫øu bi·∫øn quan tr·ªçng
}

// ‚úÖ L·∫•y PORT t·ª´ bi·∫øn m√¥i tr∆∞·ªùng ho·∫∑c d√πng m·∫∑c ƒë·ªãnh
const PORT = process.env.PORT || 3002;

// ‚úÖ Kh·ªüi ƒë·ªông server
const server = app.listen(PORT, () => {
  console.log(`üöÄ Media-service running on port ${PORT}`);

  // In ra c√°c bi·∫øn m√¥i tr∆∞·ªùng quan tr·ªçng ƒë·ªÉ debug
  console.log('Environment variables:', {
    PORT: process.env.PORT,
    MEDIA_URL: process.env.MEDIA_URL,
    JWT_SECRET: process.env.JWT_SECRET ? '[REDACTED]' : undefined // ·∫®n key tr√°nh l·ªô
  });
});

// ‚úÖ X·ª≠ l√Ω l·ªói khi kh·ªüi ƒë·ªông server (v√≠ d·ª• tr√πng port)
server.on('error', (error) => {
  console.error('‚ùå Server startup error:', error);

  if (error.code === 'EADDRINUSE') {
    console.error(`‚ö†Ô∏è Port ${PORT} is already in use. Please free the port or use a different one.`);
  }

  process.exit(1);
});

// ‚úÖ Xu·∫•t server ƒë·ªÉ d√πng trong test (n·∫øu c·∫ßn)
module.exports = server;
